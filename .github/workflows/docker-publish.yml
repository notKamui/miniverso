name: Build and Publish Docker Image

on:
  push:
    branches:
      - main

env:
  APP_VERSION: ""

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: build-output
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build application
        run: bun run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./dist/
          include-hidden-files: true
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist/

      - name: Extract version from package.json
        id: version
        run: |
          APP_VERSION=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install production dependencies
        run: bun install --frozen-lockfile --production

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./deployment/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/miniverso:${{ env.APP_VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/miniverso:latest
